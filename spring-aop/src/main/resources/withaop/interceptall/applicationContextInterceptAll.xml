<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="customerService" class="me.ranjit.spring.aop.CustomerService">
        <property name="name" value="ranjit" />
        <property name="url" value="me.ranjit.www"/>
    </bean>

    <!-- 创建AOP bean -->
    <bean id="hijackBeforeMethodBean" class="me.ranjit.spring.aop.withaop.interceptall.HijackBeforeMethod"/>
    <bean id="hijackAfterMethodBean" class="me.ranjit.spring.aop.withaop.interceptall.HijackAfterMethod"/>
    <bean id="hijackThrowExceptionBean" class="me.ranjit.spring.aop.withaop.interceptall.HijackThrowException"/>
    <bean id="hijackAroundMethodBean" class="me.ranjit.spring.aop.withaop.interceptall.HijackAroundMethod"/>

    <!-- 创建一个新的代理对象
    ‘target’ – 定义你想拦截的bean。
    ‘interceptorNames’ – 定义要应用这个代理/目标对象的类(通知)。
    -->
    <bean id="customerServiceProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerService"/>
        <property name="interceptorNames">
            <list>
                <value>hijackBeforeMethodBean</value>
                <value>hijackAfterMethodBean</value>
                <value>hijackThrowExceptionBean</value>
                <value>hijackAroundMethodBean</value>
            </list>
        </property>
    </bean>
</beans>